{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_sliced_to_array.js","node_modules/@swc/helpers/esm/_array_with_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array_limit.js","node_modules/@swc/helpers/esm/_non_iterable_rest.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js"],"sourcesContent":["(function () {\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$2996f80ef42b8419(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$d60067ff2358eee8(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $09cbfe85151ea6c6$export$e6256bf45c68d561(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n\n\nfunction $8ca2848f896a6803$export$2fd15edff6687200(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\n\n\nfunction $a0bc1859061deae1$export$60dbc22abd7da546() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\nfunction $c3b10a83b523f372$export$79e617b1955a2616(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $d4f69c5c6c4654b1$export$a5be06335b3a083c(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n}\n\n\nfunction $efec029548ccee7f$export$fdf2a89c76341bbf(arr, i) {\n    return (0, $09cbfe85151ea6c6$export$e6256bf45c68d561)(arr) || (0, $8ca2848f896a6803$export$2fd15edff6687200)(arr, i) || (0, $d4f69c5c6c4654b1$export$a5be06335b3a083c)(arr, i) || (0, $a0bc1859061deae1$export$60dbc22abd7da546)();\n}\n\n\n\nfunction $c50969dc1df61e8b$export$7e0947b5ad3404e2(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$1eb58a6e75231000(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$e6f3c4780d19eb2b() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $227c6742e0ff6f82$export$1b5e630bc3aea29f(arr) {\n    return (0, $c50969dc1df61e8b$export$7e0947b5ad3404e2)(arr) || (0, $09c9f293d010c0e1$export$1eb58a6e75231000)(arr) || (0, $d4f69c5c6c4654b1$export$a5be06335b3a083c)(arr) || (0, $38c2d4931cb7a7c4$export$e6f3c4780d19eb2b)();\n}\n\n\n\"use strict\";\nvar $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ];\n        (0, $8713978b2328d32b$export$2996f80ef42b8419)(this, Game);\n        this.initialState = initialState;\n        this.state = initialState.map(function(row) {\n            return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(row);\n        });\n        this.score = 0;\n        this.status = \"idle\";\n    }\n    (0, $4fc75ccb937ab1df$export$d60067ff2358eee8)(Game, [\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                if (this.status !== \"playing\") return;\n                var moved = false;\n                var oldState = JSON.stringify(this.state);\n                for(var r = 0; r < this.state.length; r++){\n                    var row = this.state[r];\n                    row = this.slide(row);\n                    this.state[r] = row;\n                }\n                var newState = JSON.stringify(this.state);\n                if (oldState !== newState) moved = true;\n                if (moved) {\n                    this.addRandomTile();\n                    this.checkWin();\n                    this.checkLose();\n                }\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                if (this.status !== \"playing\") return;\n                var moved = false;\n                var oldState = JSON.stringify(this.state);\n                for(var r = 0; r < this.state.length; r++){\n                    var row = this.state[r];\n                    row.reverse();\n                    row = this.slide(row);\n                    this.state[r] = row.reverse();\n                }\n                var newState = JSON.stringify(this.state);\n                if (oldState !== newState) moved = true;\n                if (moved) {\n                    this.addRandomTile();\n                    this.checkWin();\n                    this.checkLose();\n                }\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                if (this.status !== \"playing\") return;\n                var moved = false;\n                var oldState = JSON.stringify(this.state);\n                for(var c = 0; c < this.state.length; c++){\n                    var row = [\n                        this.state[0][c],\n                        this.state[1][c],\n                        this.state[2][c],\n                        this.state[3][c]\n                    ];\n                    row = this.slide(row);\n                    this.state[0][c] = row[0];\n                    this.state[1][c] = row[1];\n                    this.state[2][c] = row[2];\n                    this.state[3][c] = row[3];\n                }\n                var newState = JSON.stringify(this.state);\n                if (oldState !== newState) moved = true;\n                if (moved) {\n                    this.addRandomTile();\n                    this.checkWin();\n                    this.checkLose();\n                }\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                if (this.status !== \"playing\") return;\n                var moved = false;\n                var oldState = JSON.stringify(this.state);\n                for(var c = 0; c < this.state.length; c++){\n                    var row = [\n                        this.state[0][c],\n                        this.state[1][c],\n                        this.state[2][c],\n                        this.state[3][c]\n                    ];\n                    row.reverse();\n                    row = this.slide(row);\n                    row.reverse();\n                    this.state[0][c] = row[0];\n                    this.state[1][c] = row[1];\n                    this.state[2][c] = row[2];\n                    this.state[3][c] = row[3];\n                }\n                var newState = JSON.stringify(this.state);\n                if (oldState !== newState) moved = true;\n                if (moved) {\n                    this.addRandomTile();\n                    this.checkWin();\n                    this.checkLose();\n                }\n            }\n        },\n        {\n            key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            key: \"getState\",\n            value: function getState() {\n                return this.state;\n            }\n        },\n        {\n            key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            key: \"start\",\n            value: function start() {\n                this.addRandomTile();\n                this.addRandomTile();\n                this.status = \"playing\";\n            }\n        },\n        {\n            key: \"restart\",\n            value: function restart() {\n                this.state = this.initialState.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(row);\n                });\n                this.score = 0;\n                this.status = \"idle\";\n            }\n        },\n        {\n            key: \"addRandomTile\",\n            value: function addRandomTile() {\n                var emptyCells = this.getEmptyCells();\n                if (emptyCells.length === 0) return;\n                var cellIndex = Math.floor(Math.random() * emptyCells.length);\n                var _emptyCells_cellIndex = (0, $efec029548ccee7f$export$fdf2a89c76341bbf)(emptyCells[cellIndex], 2), row = _emptyCells_cellIndex[0], col = _emptyCells_cellIndex[1];\n                this.state[row][col] = Math.random() > 0.9 ? 4 : 2;\n            }\n        },\n        {\n            key: \"getEmptyCells\",\n            value: function getEmptyCells() {\n                var emptyCells = [];\n                this.state.forEach(function(row, rowIndex) {\n                    for(var cellIndex = 0; cellIndex < row.length; cellIndex++)if (row[cellIndex] === 0) emptyCells.push([\n                        rowIndex,\n                        cellIndex\n                    ]);\n                });\n                return emptyCells;\n            }\n        },\n        {\n            key: \"filterZero\",\n            value: function filterZero(row) {\n                return row.filter(function(num) {\n                    return num !== 0;\n                });\n            }\n        },\n        {\n            key: \"slide\",\n            value: function slide(row) {\n                var newRow = this.filterZero(row);\n                for(var i = 0; i < newRow.length - 1; i++)if (newRow[i] === newRow[i + 1]) {\n                    newRow[i] *= 2;\n                    newRow[i + 1] = 0;\n                    this.score += newRow[i];\n                }\n                newRow = this.filterZero(newRow);\n                while(newRow.length < this.state.length)newRow.push(0);\n                return newRow;\n            }\n        },\n        {\n            key: \"checkWin\",\n            value: function checkWin() {\n                var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n                try {\n                    for(var _iterator = this.state[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                        var row = _step.value;\n                        if (row.includes(2048)) {\n                            this.status = \"win\";\n                            return true;\n                        }\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return != null) {\n                            _iterator.return();\n                        }\n                    } finally{\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n                return false;\n            }\n        },\n        {\n            key: \"checkLose\",\n            value: function checkLose() {\n                if (this.getEmptyCells().length > 0) return;\n                for(var r = 0; r < this.state.length; r++)for(var c = 0; c < this.state[r].length - 1; c++){\n                    if (this.state[r][c] === this.state[r][c + 1]) return;\n                    if (r < this.state.length - 1 && this.state[r][c] === this.state[r + 1][c]) return;\n                }\n                this.status = \"lose\";\n            }\n        }\n    ]);\n    return Game;\n}();\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\nvar $197cd56b15c33885$var$button = document.querySelector(\".start\");\nvar $197cd56b15c33885$var$score = document.querySelector(\".game-score\");\nvar $197cd56b15c33885$var$messageStart = document.querySelector(\".message-start\");\nvar $197cd56b15c33885$var$messageWin = document.querySelector(\".message-win\");\nvar $197cd56b15c33885$var$messageLose = document.querySelector(\".message-lose\");\n$197cd56b15c33885$var$button.addEventListener(\"click\", function(e) {\n    if ($197cd56b15c33885$var$button.classList.contains(\"start\")) {\n        $197cd56b15c33885$var$game.start();\n        $197cd56b15c33885$var$renderGameBoard();\n        $197cd56b15c33885$var$messageStart.classList.add(\"hidden\");\n        $197cd56b15c33885$var$button.classList.remove(\"start\");\n        $197cd56b15c33885$var$button.textContent = \"Restart\";\n        $197cd56b15c33885$var$button.classList.add(\"restart\");\n    } else {\n        $197cd56b15c33885$var$game.restart();\n        $197cd56b15c33885$var$renderGameBoard();\n        $197cd56b15c33885$var$messageStart.classList.remove(\"hidden\");\n        $197cd56b15c33885$var$button.classList.remove(\"restart\");\n        $197cd56b15c33885$var$button.textContent = \"Start\";\n        $197cd56b15c33885$var$button.classList.add(\"start\");\n    }\n});\ndocument.addEventListener(\"keydown\", function(e) {\n    switch(e.code){\n        case \"KeyA\":\n        case \"ArrowLeft\":\n            $197cd56b15c33885$var$game.moveLeft();\n            break;\n        case \"KeyW\":\n        case \"ArrowUp\":\n            $197cd56b15c33885$var$game.moveUp();\n            break;\n        case \"KeyD\":\n        case \"ArrowRight\":\n            $197cd56b15c33885$var$game.moveRight();\n            break;\n        case \"KeyS\":\n        case \"ArrowDown\":\n            $197cd56b15c33885$var$game.moveDown();\n            break;\n        default:\n            break;\n    }\n    $197cd56b15c33885$var$renderGameBoard();\n    $197cd56b15c33885$var$checkGameOver();\n});\nfunction $197cd56b15c33885$var$renderGameBoard() {\n    var state = $197cd56b15c33885$var$game.getState();\n    var rows = document.querySelectorAll(\".field-row\");\n    $197cd56b15c33885$var$score.textContent = \"\";\n    $197cd56b15c33885$var$score.textContent = $197cd56b15c33885$var$game.getScore();\n    rows.forEach(function(row, rowIndex) {\n        var cells = row.querySelectorAll(\".field-cell\");\n        cells.forEach(function(cell, cellIndex) {\n            var value = state[rowIndex][cellIndex];\n            cell.textContent = value === 0 ? \"\" : value;\n            cell.className = \"field-cell\";\n            if (value !== 0) cell.classList.add(\"field-cell--\".concat(value));\n        });\n    });\n}\nfunction $197cd56b15c33885$var$checkGameOver() {\n    if ($197cd56b15c33885$var$game.getStatus() === \"lose\") {\n        $197cd56b15c33885$var$messageLose.classList.remove(\"hidden\");\n        $197cd56b15c33885$var$messageWin.classList.add(\"hidden\");\n        $197cd56b15c33885$var$messageStart.classList.add(\"hidden\");\n    } else if ($197cd56b15c33885$var$game.getStatus() === \"win\") {\n        $197cd56b15c33885$var$messageWin.classList.remove(\"hidden\");\n        $197cd56b15c33885$var$messageLose.classList.add(\"hidden\");\n        $197cd56b15c33885$var$messageStart.classList.add(\"hidden\");\n    }\n}\n\n})();\n//# sourceMappingURL=index.e1fc4744.js.map\n","'use strict';\n\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\nconst button = document.querySelector('.start');\nconst score = document.querySelector('.game-score');\n\nconst messageStart = document.querySelector('.message-start');\nconst messageWin = document.querySelector('.message-win');\nconst messageLose = document.querySelector('.message-lose');\n\nbutton.addEventListener('click', (e) => {\n  if (button.classList.contains('start')) {\n    game.start();\n    renderGameBoard();\n\n    messageStart.classList.add('hidden');\n    button.classList.remove('start');\n    button.textContent = 'Restart';\n    button.classList.add('restart');\n  } else {\n    game.restart();\n    renderGameBoard();\n\n    messageStart.classList.remove('hidden');\n    button.classList.remove('restart');\n    button.textContent = 'Start';\n    button.classList.add('start');\n  }\n});\n\ndocument.addEventListener('keydown', (e) => {\n  switch (e.code) {\n    case 'KeyA':\n    case 'ArrowLeft':\n      game.moveLeft();\n      break;\n\n    case 'KeyW':\n    case 'ArrowUp':\n      game.moveUp();\n      break;\n\n    case 'KeyD':\n    case 'ArrowRight':\n      game.moveRight();\n      break;\n\n    case 'KeyS':\n    case 'ArrowDown':\n      game.moveDown();\n      break;\n\n    default:\n      break;\n  }\n\n  renderGameBoard();\n  checkGameOver();\n});\n\nfunction renderGameBoard() {\n  const state = game.getState();\n  const rows = document.querySelectorAll('.field-row');\n\n  score.textContent = '';\n  score.textContent = game.getScore();\n\n  rows.forEach((row, rowIndex) => {\n    const cells = row.querySelectorAll('.field-cell');\n\n    cells.forEach((cell, cellIndex) => {\n      const value = state[rowIndex][cellIndex];\n\n      cell.textContent = value === 0 ? '' : value;\n      cell.className = 'field-cell';\n\n      if (value !== 0) {\n        cell.classList.add(`field-cell--${value}`);\n      }\n    });\n  });\n}\n\nfunction checkGameOver() {\n  if (game.getStatus() === 'lose') {\n    messageLose.classList.remove('hidden');\n    messageWin.classList.add('hidden');\n    messageStart.classList.add('hidden');\n  } else if (game.getStatus() === 'win') {\n    messageWin.classList.remove('hidden');\n    messageLose.classList.add('hidden');\n    messageStart.classList.add('hidden');\n  }\n}\n","'use strict';\n\nclass Game {\n  constructor(\n    initialState = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ],\n  ) {\n    this.initialState = initialState;\n    this.state = initialState.map((row) => [...row]);\n    this.score = 0;\n    this.status = 'idle';\n  }\n  moveLeft() {\n    if (this.status !== 'playing') {\n      return;\n    }\n\n    let moved = false;\n    const oldState = JSON.stringify(this.state);\n\n    for (let r = 0; r < this.state.length; r++) {\n      let row = this.state[r];\n\n      row = this.slide(row);\n      this.state[r] = row;\n    }\n\n    const newState = JSON.stringify(this.state);\n\n    if (oldState !== newState) {\n      moved = true;\n    }\n\n    if (moved) {\n      this.addRandomTile();\n      this.checkWin();\n      this.checkLose();\n    }\n  }\n  moveRight() {\n    if (this.status !== 'playing') {\n      return;\n    }\n\n    let moved = false;\n    const oldState = JSON.stringify(this.state);\n\n    for (let r = 0; r < this.state.length; r++) {\n      let row = this.state[r];\n\n      row.reverse();\n\n      row = this.slide(row);\n      this.state[r] = row.reverse();\n    }\n\n    const newState = JSON.stringify(this.state);\n\n    if (oldState !== newState) {\n      moved = true;\n    }\n\n    if (moved) {\n      this.addRandomTile();\n      this.checkWin();\n      this.checkLose();\n    }\n  }\n  moveUp() {\n    if (this.status !== 'playing') {\n      return;\n    }\n\n    let moved = false;\n    const oldState = JSON.stringify(this.state);\n\n    for (let c = 0; c < this.state.length; c++) {\n      let row = [\n        this.state[0][c],\n        this.state[1][c],\n        this.state[2][c],\n        this.state[3][c],\n      ];\n\n      row = this.slide(row);\n      this.state[0][c] = row[0];\n      this.state[1][c] = row[1];\n      this.state[2][c] = row[2];\n      this.state[3][c] = row[3];\n    }\n\n    const newState = JSON.stringify(this.state);\n\n    if (oldState !== newState) {\n      moved = true;\n    }\n\n    if (moved) {\n      this.addRandomTile();\n      this.checkWin();\n      this.checkLose();\n    }\n  }\n  moveDown() {\n    if (this.status !== 'playing') {\n      return;\n    }\n\n    let moved = false;\n    const oldState = JSON.stringify(this.state);\n\n    for (let c = 0; c < this.state.length; c++) {\n      let row = [\n        this.state[0][c],\n        this.state[1][c],\n        this.state[2][c],\n        this.state[3][c],\n      ];\n\n      row.reverse();\n\n      row = this.slide(row);\n      row.reverse();\n      this.state[0][c] = row[0];\n      this.state[1][c] = row[1];\n      this.state[2][c] = row[2];\n      this.state[3][c] = row[3];\n    }\n\n    const newState = JSON.stringify(this.state);\n\n    if (oldState !== newState) {\n      moved = true;\n    }\n\n    if (moved) {\n      this.addRandomTile();\n      this.checkWin();\n      this.checkLose();\n    }\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getState() {\n    return this.state;\n  }\n\n  getStatus() {\n    return this.status;\n  }\n\n  start() {\n    this.addRandomTile();\n    this.addRandomTile();\n\n    this.status = 'playing';\n  }\n\n  restart() {\n    this.state = this.initialState.map((row) => [...row]);\n    this.score = 0;\n    this.status = 'idle';\n  }\n\n  addRandomTile() {\n    const emptyCells = this.getEmptyCells();\n\n    if (emptyCells.length === 0) {\n      return;\n    }\n\n    const cellIndex = Math.floor(Math.random() * emptyCells.length);\n    const [row, col] = emptyCells[cellIndex];\n\n    this.state[row][col] = Math.random() > 0.9 ? 4 : 2;\n  }\n\n  getEmptyCells() {\n    const emptyCells = [];\n\n    this.state.forEach((row, rowIndex) => {\n      for (let cellIndex = 0; cellIndex < row.length; cellIndex++) {\n        if (row[cellIndex] === 0) {\n          emptyCells.push([rowIndex, cellIndex]);\n        }\n      }\n    });\n\n    return emptyCells;\n  }\n\n  filterZero(row) {\n    return row.filter((num) => num !== 0);\n  }\n\n  slide(row) {\n    let newRow = this.filterZero(row);\n\n    for (let i = 0; i < newRow.length - 1; i++) {\n      if (newRow[i] === newRow[i + 1]) {\n        newRow[i] *= 2;\n        newRow[i + 1] = 0;\n        this.score += newRow[i];\n      }\n    }\n\n    newRow = this.filterZero(newRow);\n\n    while (newRow.length < this.state.length) {\n      newRow.push(0);\n    }\n\n    return newRow;\n  }\n\n  checkWin() {\n    for (const row of this.state) {\n      if (row.includes(2048)) {\n        this.status = 'win';\n\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  checkLose() {\n    if (this.getEmptyCells().length > 0) {\n      return;\n    }\n\n    for (let r = 0; r < this.state.length; r++) {\n      for (let c = 0; c < this.state[r].length - 1; c++) {\n        if (this.state[r][c] === this.state[r][c + 1]) {\n          return;\n        }\n\n        if (\n          r < this.state.length - 1 &&\n          this.state[r][c] === this.state[r + 1][c]\n        ) {\n          return;\n        }\n      }\n    }\n\n    this.status = 'lose';\n  }\n}\n\nmodule.exports = Game;\n","export function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nexport function _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","import { _array_with_holes } from \"./_array_with_holes.js\";\nimport { _iterable_to_array_limit } from \"./_iterable_to_array_limit.js\";\nimport { _non_iterable_rest } from \"./_non_iterable_rest.js\";\nimport { _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nexport function _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nexport { _sliced_to_array as _ };\n","export function _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nexport { _array_with_holes as _ };\n","export function _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n    if (_i == null) return;\n\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n\n    try {\n        for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally {\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally {\n            if (_d) throw _e;\n        }\n    }\n\n    return _arr;\n}\nexport { _iterable_to_array_limit as _ };\n","export function _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_rest as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n","export function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","import { _array_without_holes } from \"./_array_without_holes.js\";\nimport { _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nexport function _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","export function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","export function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n"],"names":["$c3b10a83b523f372$export$79e617b1955a2616","arr","len","length","i","arr2","Array","$d4f69c5c6c4654b1$export$a5be06335b3a083c","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","from","test","$227c6742e0ff6f82$export$1b5e630bc3aea29f","isArray","iter","Symbol","iterator","TypeError","$197cd56b15c33885$var$game","protoProps","Game","initialState","arguments","instance","Constructor","state","map","row","score","status","key","value","moved","oldState","JSON","stringify","r","slide","addRandomTile","checkWin","checkLose","reverse","c","emptyCells","getEmptyCells","cellIndex","Math","floor","random","_emptyCells_cellIndex","_s","_e","_i","_arr","_n","_d","next","done","push","err","col","forEach","rowIndex","filter","num","newRow","filterZero","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","includes","return","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","$197cd56b15c33885$var$button","document","querySelector","$197cd56b15c33885$var$score","$197cd56b15c33885$var$messageStart","$197cd56b15c33885$var$messageWin","$197cd56b15c33885$var$messageLose","$197cd56b15c33885$var$renderGameBoard","getState","rows","querySelectorAll","textContent","getScore","cells","cell","className","classList","add","concat","addEventListener","e","contains","start","remove","restart","code","moveLeft","moveUp","moveRight","moveDown","getStatus"],"version":3,"file":"index.e1fc4744.js.map"}